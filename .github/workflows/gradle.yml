name: Java CI with Gradle

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test -x spotbugsMain

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Run Tests
        run: ./gradlew test -x spotbugsMain
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/test-results/**/*.xml

  static_analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Run Static Code Analysis
        run: ./gradlew spotbugsMain
      - name: Publish Results
        uses: jwgmeligmeyling/spotbugs-github-action@v1.2
        with:
          name: SpotBugs
          title: SpotBugs report
          path: |
            **/reports/spotbugs/*.xml

  docker:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Meta Data
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            christianmaintz/telemed
          tags: |
            type=raw,value=github-latest
            type=raw,value=github-${{ github.run_number }}

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_test:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy to Test
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private.key
          sudo chmod 600 ~/.ssh/private.key
          ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts
          ssh -v -i ~/.ssh/private.key $SSH_USER@$SSH_HOST << 'ENDSSH'
          docker pull christianmaintz/telemed:github-${{ github.run_number }}
          docker stop telemed-test || true
          docker rm telemed-test || true
          docker run -d -p 7777:7777 --name telemed-test christianmaintz/telemed:github-${{ github.run_number }}
          ENDSSH
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY_TEST}}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          SSH_USER: ${{secrets.SSH_USER_TEST}}
          SSH_HOST: ${{secrets.SSH_HOST_TEST}}

  manual_prod_deployment_approval:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    name: Manual Approval of Production Deployment
    runs-on: ubuntu-latest
    needs: deploy_to_test
    permissions:
      issues: write
    steps:
      - name: Manual Workflow Approval
        uses: trstringer/manual-approval@v1.9.0
        with:
          secret: ${{ github.TOKEN }}
          approvers: Xerian
          minimum-approvals: 1
          issue-title: "Deploying new version to Production"
          exclude-workflow-initiator-as-approver: false

  deploy_to_prod:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: manual_prod_deployment_approval
    steps:
      - name: Deploy to Production
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private.key
          sudo chmod 600 ~/.ssh/private.key
          ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts
          ssh -v -i ~/.ssh/private.key $SSH_USER@$SSH_HOST << 'ENDSSH'
          docker pull christianmaintz/telemed:github-${{ github.run_number }}
          docker stop telemed-prod || true
          docker rm telemed-prod || true
          docker run -d -p 7777:7777 --name telemed-prod christianmaintz/telemed:github-${{ github.run_number }}
          ENDSSH
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY_PROD}}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          SSH_USER: ${{secrets.SSH_USER_PROD}}
          SSH_HOST: ${{secrets.SSH_HOST_PROD}}

